{"version":3,"file":"word-count.component.js","sourceRoot":"","sources":["../src/word-count.component.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,MAAM,CAAC,OAAO,OAAO,SAAU,SAAQ,oBAAoB;IAUvD;QACI,yCAAyC;QACzC,KAAK,EAAE,CAAC;QAER,0CAA0C;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAyB,CAAC;QAEhD,MAAM,QAAQ,GAAG,GAAG,EAAE;YAClB,MAAM,KAAK,GAAG,UAAU,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzD,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC;QAEF,uBAAuB;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAEnD,4CAA4C;QAC5C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,QAAQ,EAAE,CAAC;QAE9B,+BAA+B;QAC/B,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEzB,4CAA4C;QAC5C,WAAW,CAAC;YACR,IAAI,CAAC,WAAW,GAAG,QAAQ,EAAE,CAAC;QAClC,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAhCD,MAAM,CAAC,UAAU,CAAC,IAAiB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC;QAChD,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO,CAAC,CAAC,CAAC;SAAE;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;IACrC,CAAC;;AANM,qBAAW,GAAG,YAAY,CAAC;AAqCtC,yBAAyB;AACzB,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC","sourcesContent":["// Create a class for the element\nexport default class WordCount extends HTMLParagraphElement {\n\n    static elementName = 'word-count';\n\n    static countWords(node: HTMLElement): number {\n        const text = node.innerText || node.textContent;\n        if (!text) { return -1; }\n        return text.split(/\\s+/g).length;\n    }\n\n    constructor() {\n        // Always call super first in constructor\n        super();\n\n        // count words in element's parent element\n        const wcParent = this.parentNode as HTMLElement;\n\n        const getCount = () => {\n            const count = `Words: ${WordCount.countWords(wcParent)}`;\n            return count;\n        };\n\n        // Create a shadow root\n        const shadow = this.attachShadow({ mode: 'open' });\n\n        // Create text node and add word count to it\n        const text = document.createElement('span');\n        text.textContent = getCount();\n\n        // Append it to the shadow root\n        shadow.appendChild(text);\n\n        // Update count when element content changes\n        setInterval(function () {\n            text.textContent = getCount();\n        }, 200);\n    }\n}\n\n// Define the new element\ncustomElements.define(WordCount.elementName, WordCount, { extends: 'p' });\n"]}